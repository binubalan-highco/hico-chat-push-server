/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2019-05-22 05:07:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\n");
      out.write("\n");
      out.write("<body style=\"margin: 35px\">\n");
      out.write("<form>\n");
      out.write("    <input type=\"text\" id=\"usernameField\" placeholder=\"User name\" />\n");
      out.write("    <input type=\"button\" value=\"get token\" onclick=\"newUser()\" /><br /><br /><br />\n");
      out.write("    <input id=\"messageField\" type=\"text\">\n");
      out.write("    <input type=\"text\" id=\"tousertoken\" placeholder=\"To user token\" />\n");
      out.write("    <input onclick=\"sendMsg('ONMESSAGE',usernameField.value,msgField.value,tousertoken.value);\" value=\"send\" type=\"button\">\n");
      out.write("</form>\n");
      out.write("\n");
      out.write("<div id=\"msg-box\" style=\"width:90%; height: 500px; background: #eee; overflow:auto;\"></div>\n");
      out.write("\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    var webSocket;\n");
      out.write("    var msgField = document.getElementById(\"messageField\");\n");
      out.write("    var divMsg = document.getElementById(\"msg-box\");\n");
      out.write("\n");
      out.write("    var usernameField = document.getElementById(\"usernameField\");\n");
      out.write("    var tousertoken = document.getElementById(\"tousertoken\");\n");
      out.write("\n");
      out.write("\n");
      out.write("    function newUser()\n");
      out.write("    {\n");
      out.write("        api(\"{\\\"context\\\":\\\"NEWUSER\\\",\\\"username\\\":\\\"\"+usernameField.value+\"\\\"}\",\n");
      out.write("            function(){\n");
      out.write("                if (this.readyState == 4 && this.status == 200) {\n");
      out.write("                    console.log(\"responseText=\" + this.responseText);\n");
      out.write("                    let inputObject = JSON.parse(this.responseText);\n");
      out.write("                    if(inputObject)\n");
      out.write("                    {\n");
      out.write("                        console.log(inputObject);\n");
      out.write("                        if(inputObject.status && inputObject.status ==1 && inputObject.token)\n");
      out.write("                        {\n");
      out.write("                            usernameField.value = inputObject.token;\n");
      out.write("                            initWebSocket();\n");
      out.write("                        }else console.log(\"FATAL\");\n");
      out.write("                    }else console.log(inputObject);\n");
      out.write("\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        )\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function initWebSocket()\n");
      out.write("    {\n");
      out.write("        webSocket = new WebSocket(\"ws://11.100.109.22:8080/wschat\");\n");
      out.write("        webSocket.onmessage = function(message) {\n");
      out.write("            divMsg.innerHTML += \"Server> : \" + message.data;\n");
      out.write("\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        webSocket.onopen = function() {\n");
      out.write("            console.log(\"connection opened\");\n");
      out.write("            sendMsg('ONCONNECTION',usernameField.value,'','');\n");
      out.write("        };\n");
      out.write("\n");
      out.write("        webSocket.onclose = function() {\n");
      out.write("            console.log(\"connection closed\");\n");
      out.write("        };\n");
      out.write("\n");
      out.write("        webSocket.onerror = function wserror(message) {\n");
      out.write("            console.log(\"error: \" + message);\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("    function api(input,cb) {\n");
      out.write("        var xhttp = new XMLHttpRequest();\n");
      out.write("        xhttp.open(\"POST\", \"http://11.100.109.22:8080/api\", true);\n");
      out.write("        xhttp.setRequestHeader(\"Content-type\", \"application/json\");\n");
      out.write("        xhttp.send(input);\n");
      out.write("\n");
      out.write("        xhttp.onreadystatechange = cb;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function sendMsg(context, token, message, toToken) {\n");
      out.write("        var msgToSend = \"{\\\"context\\\":\\\"\"+context+\"\\\",\\\"token\\\":\\\"\"+token+\"\\\",\\\"message\\\":\\\"\"+message+\"\\\",\\\"toToken\\\":\\\"\"+toToken+\"\\\"}\";\n");
      out.write("        webSocket.send(msgToSend);\n");
      out.write("        divMsg.innerHTML += \"<div style='color:red'>Client> \" + msgToSend +\n");
      out.write("            \"</div>\"\n");
      out.write("        msgField.value = \"\";\n");
      out.write("    }\n");
      out.write("\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
